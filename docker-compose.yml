version: '3.7'

services:
    nginx:
        image: nginx:1.17.9-alpine
        working_dir: /var/www
        volumes:
            - .:/var/www
            - ./logs/nginx:/var/log/nginx
            - ./.docker/nginx/site.conf:/etc/nginx/conf.d/default.conf
        ports:
            - "${NGINX_PORT:-8080}:80"
        links:
            - php
        networks:
            - network

    php:
        build:
            context: ./.docker/php
        working_dir: /var/www
        environment:
            docker: "true"
        volumes:
            - .:/var/www
            - logs:/var/www/logs
        expose:
            - 9000
        depends_on:
            - postgres
        networks:
            - network

    composer:
        restart: 'no'
        image: composer
        command: install --ignore-platform-reqs
        volumes:
            - .:/app
        links:
            - php

    postgres:
        image: postgres:12.2
        environment:
            POSTGRES_USER: ${POSTGRES_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-123}
            PGDATA: /data/postgres
        volumes:
            - postgres:/data/postgres
            - ./db-init.sql:/docker-entrypoint-initdb.d/init.sql
        ports:
            - "5432:5432"
        networks:
            - network

    pgadmin:
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
        volumes:
            - pgadmin:/root/.pgadmin
            - ./.docker/pgadmin/servers.json:/pgadmin4/servers.json
        ports:
            - "${PGADMIN_PORT:-5050}:80"
        depends_on:
            - postgres
        networks:
            - network

volumes:
    logs:
        driver: local
    postgres:
    pgadmin:

networks:
    network:
        driver: bridge
